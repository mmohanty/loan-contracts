{
  "contract_name": "identity",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "string",
    "enum": []
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "update_metadata"
        ],
        "properties": {
          "update_metadata": {
            "type": "object",
            "required": [
              "identity_data"
            ],
            "properties": {
              "identity_data": {
                "$ref": "#/definitions/IdentityMetadata"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "create_loan"
        ],
        "properties": {
          "create_loan": {
            "type": "object",
            "required": [
              "loan_requests",
              "user_id"
            ],
            "properties": {
              "loan_requests": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/LoanRequest"
                }
              },
              "user_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "assign_loans_to_reviewer"
        ],
        "properties": {
          "assign_loans_to_reviewer": {
            "type": "object",
            "required": [
              "loans",
              "reviewer"
            ],
            "properties": {
              "loans": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "reviewer": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "update_loan_review_status"
        ],
        "properties": {
          "update_loan_review_status": {
            "type": "object",
            "required": [
              "loan_id",
              "new_status",
              "user_id"
            ],
            "properties": {
              "loan_id": {
                "type": "string"
              },
              "new_status": {
                "$ref": "#/definitions/ReviewStatus"
              },
              "user_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "create_loan_template"
        ],
        "properties": {
          "create_loan_template": {
            "type": "object",
            "required": [
              "fields",
              "name",
              "template_id"
            ],
            "properties": {
              "fields": {
                "type": "object",
                "additionalProperties": false
              },
              "name": {
                "type": "string"
              },
              "template_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "submit_template_for_review"
        ],
        "properties": {
          "submit_template_for_review": {
            "type": "object",
            "required": [
              "reviewer",
              "template_id"
            ],
            "properties": {
              "reviewer": {
                "type": "string"
              },
              "template_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "review_template"
        ],
        "properties": {
          "review_template": {
            "type": "object",
            "required": [
              "approve",
              "template_id"
            ],
            "properties": {
              "approve": {
                "type": "boolean"
              },
              "template_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Addr": {
        "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
        "type": "string"
      },
      "FieldType": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "String"
            ],
            "properties": {
              "String": {
                "type": "object",
                "required": [
                  "is_editable"
                ],
                "properties": {
                  "format": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "is_editable": {
                    "type": "boolean"
                  },
                  "max_value": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "min_value": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Number"
            ],
            "properties": {
              "Number": {
                "type": "object",
                "required": [
                  "is_editable"
                ],
                "properties": {
                  "is_editable": {
                    "type": "boolean"
                  },
                  "max_value": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "min_value": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Boolean"
            ],
            "properties": {
              "Boolean": {
                "type": "object",
                "required": [
                  "is_editable"
                ],
                "properties": {
                  "is_editable": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Date"
            ],
            "properties": {
              "Date": {
                "type": "object",
                "required": [
                  "is_editable"
                ],
                "properties": {
                  "format": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "is_editable": {
                    "type": "boolean"
                  },
                  "max_value": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "min_value": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "IdentityMetadata": {
        "type": "object",
        "required": [
          "about",
          "address",
          "avatar",
          "name",
          "pic"
        ],
        "properties": {
          "about": {
            "type": "string"
          },
          "address": {
            "$ref": "#/definitions/Addr"
          },
          "avatar": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "pic": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoanRequest": {
        "type": "object",
        "required": [
          "template_id",
          "values"
        ],
        "properties": {
          "template_id": {
            "type": "string"
          },
          "values": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "ReviewStatus": {
        "type": "string",
        "enum": [
          "Pending",
          "Approved",
          "Reviewed",
          "Rejected"
        ]
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "user_info"
        ],
        "properties": {
          "user_info": {
            "type": "object",
            "required": [
              "address"
            ],
            "properties": {
              "address": {
                "$ref": "#/definitions/Addr"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "user_info_all"
        ],
        "properties": {
          "user_info_all": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_loans_for_user"
        ],
        "properties": {
          "get_loans_for_user": {
            "type": "object",
            "required": [
              "user_id"
            ],
            "properties": {
              "user_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_loan_details"
        ],
        "properties": {
          "get_loan_details": {
            "type": "object",
            "required": [
              "loan_id",
              "user_id"
            ],
            "properties": {
              "loan_id": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_loans_for_reviewer"
        ],
        "properties": {
          "get_loans_for_reviewer": {
            "type": "object",
            "required": [
              "reviewer"
            ],
            "properties": {
              "reviewer": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_loans_by_status"
        ],
        "properties": {
          "get_loans_by_status": {
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "$ref": "#/definitions/ReviewStatus"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_loans_by_date"
        ],
        "properties": {
          "get_loans_by_date": {
            "type": "object",
            "required": [
              "date_type",
              "from_date"
            ],
            "properties": {
              "date_type": {
                "type": "string"
              },
              "from_date": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_loan_statistics"
        ],
        "properties": {
          "get_loan_statistics": {
            "type": "object",
            "properties": {
              "reviewer": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_all_reviewer_statistics"
        ],
        "properties": {
          "get_all_reviewer_statistics": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_user_templates"
        ],
        "properties": {
          "get_user_templates": {
            "type": "object",
            "required": [
              "user_id"
            ],
            "properties": {
              "user_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_reviewer_templates"
        ],
        "properties": {
          "get_reviewer_templates": {
            "type": "object",
            "required": [
              "reviewer"
            ],
            "properties": {
              "reviewer": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Addr": {
        "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
        "type": "string"
      },
      "ReviewStatus": {
        "type": "string",
        "enum": [
          "Pending",
          "Approved",
          "Reviewed",
          "Rejected"
        ]
      }
    }
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "get_all_reviewer_statistics": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AllReviewerStatistics",
      "type": "object",
      "required": [
        "reviewers_stats",
        "total_approved",
        "total_pending",
        "total_rejected"
      ],
      "properties": {
        "reviewers_stats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanStatistics"
          }
        },
        "total_approved": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "total_pending": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "total_rejected": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false,
      "definitions": {
        "LoanStatistics": {
          "type": "object",
          "required": [
            "approved_last_month",
            "approved_this_month",
            "month_wise_status_count",
            "pending_count",
            "rejected_last_month",
            "rejected_this_month"
          ],
          "properties": {
            "approved_last_month": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "approved_this_month": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "average_time_to_process": {
              "type": [
                "string",
                "null"
              ]
            },
            "month_wise_status_count": {
              "type": "object",
              "additionalProperties": false
            },
            "pending_count": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "rejected_last_month": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "rejected_this_month": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "reviewer": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      }
    },
    "get_loan_details": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LoanData",
      "type": "object",
      "required": [
        "creation_date",
        "loan_id",
        "review_status",
        "template_id",
        "values"
      ],
      "properties": {
        "approval_date": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "creation_date": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "loan_id": {
          "type": "string"
        },
        "rejection_date": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "review_status": {
          "$ref": "#/definitions/ReviewStatus"
        },
        "template_id": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "definitions": {
        "ReviewStatus": {
          "type": "string",
          "enum": [
            "Pending",
            "Approved",
            "Reviewed",
            "Rejected"
          ]
        }
      }
    },
    "get_loan_statistics": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LoanStatistics",
      "type": "object",
      "required": [
        "approved_last_month",
        "approved_this_month",
        "month_wise_status_count",
        "pending_count",
        "rejected_last_month",
        "rejected_this_month"
      ],
      "properties": {
        "approved_last_month": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "approved_this_month": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "average_time_to_process": {
          "type": [
            "string",
            "null"
          ]
        },
        "month_wise_status_count": {
          "type": "object",
          "additionalProperties": false
        },
        "pending_count": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "rejected_last_month": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "rejected_this_month": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "reviewer": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "get_loans_by_date": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_LoanData",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LoanData"
      },
      "definitions": {
        "LoanData": {
          "type": "object",
          "required": [
            "creation_date",
            "loan_id",
            "review_status",
            "template_id",
            "values"
          ],
          "properties": {
            "approval_date": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "creation_date": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "loan_id": {
              "type": "string"
            },
            "rejection_date": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "review_status": {
              "$ref": "#/definitions/ReviewStatus"
            },
            "template_id": {
              "type": "string"
            },
            "values": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "ReviewStatus": {
          "type": "string",
          "enum": [
            "Pending",
            "Approved",
            "Reviewed",
            "Rejected"
          ]
        }
      }
    },
    "get_loans_by_status": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_LoanData",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LoanData"
      },
      "definitions": {
        "LoanData": {
          "type": "object",
          "required": [
            "creation_date",
            "loan_id",
            "review_status",
            "template_id",
            "values"
          ],
          "properties": {
            "approval_date": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "creation_date": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "loan_id": {
              "type": "string"
            },
            "rejection_date": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "review_status": {
              "$ref": "#/definitions/ReviewStatus"
            },
            "template_id": {
              "type": "string"
            },
            "values": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "ReviewStatus": {
          "type": "string",
          "enum": [
            "Pending",
            "Approved",
            "Reviewed",
            "Rejected"
          ]
        }
      }
    },
    "get_loans_for_reviewer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_LoanData",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LoanData"
      },
      "definitions": {
        "LoanData": {
          "type": "object",
          "required": [
            "creation_date",
            "loan_id",
            "review_status",
            "template_id",
            "values"
          ],
          "properties": {
            "approval_date": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "creation_date": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "loan_id": {
              "type": "string"
            },
            "rejection_date": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "review_status": {
              "$ref": "#/definitions/ReviewStatus"
            },
            "template_id": {
              "type": "string"
            },
            "values": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "ReviewStatus": {
          "type": "string",
          "enum": [
            "Pending",
            "Approved",
            "Reviewed",
            "Rejected"
          ]
        }
      }
    },
    "get_loans_for_user": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_LoanData",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LoanData"
      },
      "definitions": {
        "LoanData": {
          "type": "object",
          "required": [
            "creation_date",
            "loan_id",
            "review_status",
            "template_id",
            "values"
          ],
          "properties": {
            "approval_date": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "creation_date": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "loan_id": {
              "type": "string"
            },
            "rejection_date": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "review_status": {
              "$ref": "#/definitions/ReviewStatus"
            },
            "template_id": {
              "type": "string"
            },
            "values": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "ReviewStatus": {
          "type": "string",
          "enum": [
            "Pending",
            "Approved",
            "Reviewed",
            "Rejected"
          ]
        }
      }
    },
    "get_reviewer_templates": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_LoanTemplate",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LoanTemplate"
      },
      "definitions": {
        "FieldType": {
          "oneOf": [
            {
              "type": "object",
              "required": [
                "String"
              ],
              "properties": {
                "String": {
                  "type": "object",
                  "required": [
                    "is_editable"
                  ],
                  "properties": {
                    "format": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "is_editable": {
                      "type": "boolean"
                    },
                    "max_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "min_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "required": [
                "Number"
              ],
              "properties": {
                "Number": {
                  "type": "object",
                  "required": [
                    "is_editable"
                  ],
                  "properties": {
                    "is_editable": {
                      "type": "boolean"
                    },
                    "max_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "min_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "required": [
                "Boolean"
              ],
              "properties": {
                "Boolean": {
                  "type": "object",
                  "required": [
                    "is_editable"
                  ],
                  "properties": {
                    "is_editable": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "required": [
                "Date"
              ],
              "properties": {
                "Date": {
                  "type": "object",
                  "required": [
                    "is_editable"
                  ],
                  "properties": {
                    "format": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "is_editable": {
                      "type": "boolean"
                    },
                    "max_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "min_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "LoanTemplate": {
          "type": "object",
          "required": [
            "fields",
            "id",
            "name",
            "review_status",
            "submitter"
          ],
          "properties": {
            "fields": {
              "type": "object",
              "additionalProperties": false
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "review_status": {
              "$ref": "#/definitions/ReviewStatus"
            },
            "reviewer": {
              "type": [
                "string",
                "null"
              ]
            },
            "submitter": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "ReviewStatus": {
          "type": "string",
          "enum": [
            "Pending",
            "Approved",
            "Reviewed",
            "Rejected"
          ]
        }
      }
    },
    "get_user_templates": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_LoanTemplate",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LoanTemplate"
      },
      "definitions": {
        "FieldType": {
          "oneOf": [
            {
              "type": "object",
              "required": [
                "String"
              ],
              "properties": {
                "String": {
                  "type": "object",
                  "required": [
                    "is_editable"
                  ],
                  "properties": {
                    "format": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "is_editable": {
                      "type": "boolean"
                    },
                    "max_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "min_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "required": [
                "Number"
              ],
              "properties": {
                "Number": {
                  "type": "object",
                  "required": [
                    "is_editable"
                  ],
                  "properties": {
                    "is_editable": {
                      "type": "boolean"
                    },
                    "max_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "min_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "required": [
                "Boolean"
              ],
              "properties": {
                "Boolean": {
                  "type": "object",
                  "required": [
                    "is_editable"
                  ],
                  "properties": {
                    "is_editable": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "required": [
                "Date"
              ],
              "properties": {
                "Date": {
                  "type": "object",
                  "required": [
                    "is_editable"
                  ],
                  "properties": {
                    "format": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "is_editable": {
                      "type": "boolean"
                    },
                    "max_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "min_value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "LoanTemplate": {
          "type": "object",
          "required": [
            "fields",
            "id",
            "name",
            "review_status",
            "submitter"
          ],
          "properties": {
            "fields": {
              "type": "object",
              "additionalProperties": false
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "review_status": {
              "$ref": "#/definitions/ReviewStatus"
            },
            "reviewer": {
              "type": [
                "string",
                "null"
              ]
            },
            "submitter": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "ReviewStatus": {
          "type": "string",
          "enum": [
            "Pending",
            "Approved",
            "Reviewed",
            "Rejected"
          ]
        }
      }
    },
    "user_info": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "IdentityMetadata",
      "type": "object",
      "required": [
        "about",
        "address",
        "avatar",
        "name",
        "pic"
      ],
      "properties": {
        "about": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Addr"
        },
        "avatar": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pic": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Addr": {
          "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
          "type": "string"
        }
      }
    },
    "user_info_all": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_Tuple_of_Addr_and_IdentityMetadata",
      "type": "array",
      "items": {
        "type": "array",
        "items": [
          {
            "$ref": "#/definitions/Addr"
          },
          {
            "$ref": "#/definitions/IdentityMetadata"
          }
        ],
        "maxItems": 2,
        "minItems": 2
      },
      "definitions": {
        "Addr": {
          "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
          "type": "string"
        },
        "IdentityMetadata": {
          "type": "object",
          "required": [
            "about",
            "address",
            "avatar",
            "name",
            "pic"
          ],
          "properties": {
            "about": {
              "type": "string"
            },
            "address": {
              "$ref": "#/definitions/Addr"
            },
            "avatar": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "pic": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      }
    }
  }
}

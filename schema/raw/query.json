{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "user_info"
      ],
      "properties": {
        "user_info": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "user_info_all"
      ],
      "properties": {
        "user_info_all": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_loans_for_user"
      ],
      "properties": {
        "get_loans_for_user": {
          "type": "object",
          "required": [
            "user_id"
          ],
          "properties": {
            "user_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_loan_details"
      ],
      "properties": {
        "get_loan_details": {
          "type": "object",
          "required": [
            "loan_id",
            "user_id"
          ],
          "properties": {
            "loan_id": {
              "type": "string"
            },
            "user_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_loans_for_reviewer"
      ],
      "properties": {
        "get_loans_for_reviewer": {
          "type": "object",
          "required": [
            "reviewer"
          ],
          "properties": {
            "reviewer": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_loans_by_status"
      ],
      "properties": {
        "get_loans_by_status": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "$ref": "#/definitions/ReviewStatus"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_loans_by_date"
      ],
      "properties": {
        "get_loans_by_date": {
          "type": "object",
          "required": [
            "date_type",
            "from_date"
          ],
          "properties": {
            "date_type": {
              "type": "string"
            },
            "from_date": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_loan_statistics"
      ],
      "properties": {
        "get_loan_statistics": {
          "type": "object",
          "properties": {
            "reviewer": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_all_reviewer_statistics"
      ],
      "properties": {
        "get_all_reviewer_statistics": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_user_templates"
      ],
      "properties": {
        "get_user_templates": {
          "type": "object",
          "required": [
            "user_id"
          ],
          "properties": {
            "user_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_reviewer_templates"
      ],
      "properties": {
        "get_reviewer_templates": {
          "type": "object",
          "required": [
            "reviewer"
          ],
          "properties": {
            "reviewer": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "ReviewStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Approved",
        "Reviewed",
        "Rejected"
      ]
    }
  }
}
